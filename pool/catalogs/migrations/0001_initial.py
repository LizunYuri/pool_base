# Generated by Django 3.2 on 2024-10-23 07:18

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('supplier', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConcreteModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Будет указано в коммерческом предложении', max_length=200, verbose_name='Название')),
                ('calculation', models.BooleanField(default=True, help_text='По умолчанию в расчете участвует. Ели подразумевается отсутствие работ то должно быть неактивным', verbose_name='Участвует в расчете')),
                ('price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за .м3')),
            ],
            options={
                'verbose_name': 'Бетон',
                'verbose_name_plural': 'Бетон от завода',
            },
        ),
        migrations.CreateModel(
            name='DiggingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Указать как будет в коммерческом предложении', max_length=200, verbose_name='Название')),
                ('calculation', models.BooleanField(default=True, help_text='По умолчанию в расчете участвует. Ели подразумевается отсутствие работ то должно быть неактивным', verbose_name='Участвует в расчете')),
                ('price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за .м3')),
            ],
            options={
                'verbose_name': 'Копка',
                'verbose_name_plural': 'Разработка котлована',
            },
        ),
        migrations.CreateModel(
            name='ExportModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Будет прописано в коммерческом предложении', max_length=200, verbose_name='Название')),
                ('calculation', models.BooleanField(default=True, help_text='По умолчанию в расчете участвует. Ели подразумевается отсутствие работ то должно быть неактивным', verbose_name='Участвует в расчете')),
                ('price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за .м3')),
            ],
            options={
                'verbose_name': 'Вывоз грунта',
                'verbose_name_plural': 'Вывоз грунта',
            },
        ),
        migrations.CreateModel(
            name='FittingsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Будет указано в коммерческом предложении', max_length=200, verbose_name='Название')),
                ('price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за м.')),
            ],
            options={
                'verbose_name': 'Арматура',
                'verbose_name_plural': 'Металлопрокат',
            },
        ),
        migrations.CreateModel(
            name='JobsConcretteModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Будет указано в коммерческом предложении', max_length=200, verbose_name='Название')),
                ('calculation', models.BooleanField(default=True, help_text='По умолчанию в расчете участвует. Ели подразумевается отсутствие работ то должно быть неактивным', verbose_name='Участвует в расчете')),
                ('type_pool', models.CharField(blank=True, choices=[('poly', 'Полипропилен'), ('pvh', 'Пленка ПВХ')], default='pvh', help_text='Пленка ПВХ / Полипропилен', max_length=20, null=True, verbose_name='Тип бассейна')),
                ('price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за .м3')),
            ],
            options={
                'verbose_name': 'Работы',
                'verbose_name_plural': 'Работы по бетонированию',
            },
        ),
        migrations.CreateModel(
            name='WorkMaterialModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('unit_of_measurement', models.CharField(blank=True, choices=[('psc', 'шт.'), ('m_ch', 'м/пог'), ('m_2', 'м2'), ('kg', 'кг')], default='psc', max_length=20, null=True, verbose_name='Единица измерения')),
                ('price', models.FloatField(default=0, verbose_name='Цена за единицу')),
            ],
            options={
                'verbose_name': 'Номенклатуру',
                'verbose_name_plural': 'Работы по отделке чаши бассейна',
            },
        ),
        migrations.CreateModel(
            name='ZacladModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='В точности как в каталоге поставщика', max_length=500, verbose_name='Номенклатура')),
                ('article', models.CharField(blank=True, help_text='В точности как в каталоге поставщика', max_length=100, verbose_name='Артикул')),
                ('type_zaclad', models.CharField(blank=True, choices=[('scimmer', 'Скиммер'), ('forsunka', 'Возвратная фрсунка'), ('sliv', 'Донный слив'), ('doliv', 'Долив воды'), ('polusos', 'Пылесос')], help_text='Выбрать подходящее', max_length=20, null=True, verbose_name='Категория')),
                ('type_materials', models.CharField(blank=True, choices=[('abs', 'ABS пластик'), ('aisi', 'AISI-316 нержавеющий металл')], default='abs', help_text='Пластик или нерж', max_length=20, null=True, verbose_name='Материал изготовления')),
                ('price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за ед.')),
                ('date', models.DateField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Дата актуальности цены', null=True, verbose_name='Дата')),
                ('image', models.ImageField(help_text='Красивое фото используется для коммерческого предложения', upload_to='catalog/zaclad/', verbose_name='Фото товара')),
                ('status', models.CharField(default='no_found', editable=False, max_length=50)),
                ('product_url', models.URLField(blank=True, help_text='Для актуализации цен в каталоге поставщика. ', null=True, verbose_name='Ссылка на товар у поставщика')),
                ('supplier', models.ForeignKey(help_text='Выбрать из поставщиков', on_delete=django.db.models.deletion.CASCADE, to='supplier.suppliermodel', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Закладную',
                'verbose_name_plural': 'Закладные',
            },
        ),
        migrations.CreateModel(
            name='SetDesinfectionModelRX',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Произвольное название комплекта', max_length=200, verbose_name='Название')),
                ('type_category', models.CharField(blank=True, choices=[('rx', 'Станция дозирования Rx')], max_length=20, null=True, verbose_name='Категория')),
                ('rx_name', models.CharField(help_text='В точности как у поставщика', max_length=200, verbose_name='Дозирующий насос rx')),
                ('rx_article', models.CharField(blank=True, help_text='В точности как в каталоге поставщика', max_length=100, verbose_name='Артикул')),
                ('rx_price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за ед.')),
                ('rx_date', models.DateField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Дата актуальности цены', null=True, verbose_name='Дата')),
                ('rx_status', models.CharField(default='no_found', editable=False, max_length=50)),
                ('rx_product_url', models.URLField(blank=True, help_text='Для актуализации цен в каталоге поставщика. ', null=True, verbose_name='Ссылка на товар у поставщика')),
                ('ph_name', models.CharField(help_text='В точности как у поставщика', max_length=200, verbose_name='Дозирующий насос РН')),
                ('ph_article', models.CharField(blank=True, help_text='В точности как в каталоге поставщика', max_length=100, verbose_name='Артикул')),
                ('ph_price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за ед.')),
                ('ph_date', models.DateField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Дата актуальности цены', null=True, verbose_name='Дата')),
                ('ph_status', models.CharField(default='no_found', editable=False, max_length=50)),
                ('ph_product_url', models.URLField(blank=True, help_text='Для актуализации цен в каталоге поставщика. ', null=True, verbose_name='Ссылка на товар у поставщика')),
                ('rx_liquid_name', models.CharField(help_text='В точности как у поставщика', max_length=200, verbose_name='Жидкий хлор')),
                ('rx_liquid_article', models.CharField(blank=True, help_text='В точности как в каталоге поставщика', max_length=100, verbose_name='Артикул')),
                ('rx_liquid_price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за ед.')),
                ('rx_liquid_date', models.DateField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Дата актуальности цены', null=True, verbose_name='Дата')),
                ('rx_liquid_status', models.CharField(default='no_found', editable=False, max_length=50)),
                ('rx_liquid_product_url', models.URLField(blank=True, help_text='Для актуализации цен в каталоге поставщика. ', null=True, verbose_name='Ссылка на товар у поставщика')),
                ('ph_liquid_name', models.CharField(help_text='В точности как у поставщика', max_length=200, verbose_name='Жидкий РН регулятор')),
                ('ph_liquid_article', models.CharField(blank=True, help_text='В точности как в каталоге поставщика', max_length=100, verbose_name='Артикул')),
                ('ph_liquid_price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за ед.')),
                ('ph_liquid_date', models.DateField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Дата актуальности цены', null=True, verbose_name='Дата')),
                ('ph_liquid_status', models.CharField(default='no_found', editable=False, max_length=50)),
                ('ph_liquid_product_url', models.URLField(blank=True, help_text='Для актуализации цен в каталоге поставщика. ', null=True, verbose_name='Ссылка на товар у поставщика')),
                ('image', models.ImageField(help_text='Красивое фото используется для коммерческого предложения', upload_to='catalog/disinfection/', verbose_name='Фото товара')),
                ('model_name', models.CharField(blank=True, editable=False, max_length=100)),
                ('supplier', models.ForeignKey(help_text='Выбрать из списка', on_delete=django.db.models.deletion.CASCADE, to='supplier.suppliermodel', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Комплект станции дозирования',
                'verbose_name_plural': 'Дозирующее оборудование',
            },
        ),
        migrations.CreateModel(
            name='SetDesinfectionModelCL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Произвольное название комплекта', max_length=200, verbose_name='Название')),
                ('type_category', models.CharField(blank=True, choices=[('cl', 'Станция дозирования с измерением свободного хлора')], max_length=20, null=True, verbose_name='Категория')),
                ('article', models.CharField(blank=True, help_text='В точности как в каталоге поставщика', max_length=100, verbose_name='Артикул')),
                ('price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за ед.')),
                ('date', models.DateField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Дата актуальности цены', null=True, verbose_name='Дата')),
                ('status', models.CharField(default='no_found', editable=False, max_length=50)),
                ('product_url', models.URLField(blank=True, help_text='Для актуализации цен в каталоге поставщика. ', null=True, verbose_name='Ссылка на товар у поставщика')),
                ('rx_liquid_name', models.CharField(help_text='В точности как у поставщика', max_length=200, verbose_name='Жидкий хлор')),
                ('rx_liquid_article', models.CharField(blank=True, help_text='В точности как в каталоге поставщика', max_length=100, verbose_name='Артикул')),
                ('rx_liquid_price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за ед.')),
                ('rx_liquid_date', models.DateField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Дата актуальности цены', null=True, verbose_name='Дата')),
                ('rx_liquid_status', models.CharField(default='no_found', editable=False, max_length=50)),
                ('rx_liquid_product_url', models.URLField(blank=True, help_text='Для актуализации цен в каталоге поставщика. ', null=True, verbose_name='Ссылка на товар у поставщика')),
                ('ph_liquid_name', models.CharField(help_text='В точности как у поставщика', max_length=200, verbose_name='Жидкий РН регулятор')),
                ('ph_liquid_article', models.CharField(blank=True, help_text='В точности как в каталоге поставщика', max_length=100, verbose_name='Артикул')),
                ('ph_liquid_price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за ед.')),
                ('ph_liquid_date', models.DateField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Дата актуальности цены', null=True, verbose_name='Дата')),
                ('ph_liquid_status', models.CharField(default='no_found', editable=False, max_length=50)),
                ('ph_liquid_product_url', models.URLField(blank=True, help_text='Для актуализации цен в каталоге поставщика. ', null=True, verbose_name='Ссылка на товар у поставщика')),
                ('image', models.ImageField(help_text='Красивое фото используется для коммерческого предложения', upload_to='catalog/disinfection/', verbose_name='Фото товара')),
                ('model_name', models.CharField(blank=True, editable=False, max_length=100)),
                ('supplier', models.ForeignKey(help_text='Выбрать из списка', on_delete=django.db.models.deletion.CASCADE, to='supplier.suppliermodel', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Комплект станции дозирования с измерением свободного хлора',
                'verbose_name_plural': 'Дозирубющее оборудование с измерением свободного хлора',
            },
        ),
        migrations.CreateModel(
            name='PumpsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='В точности как в каталоге поставщика', max_length=500, verbose_name='Номенклатура')),
                ('article', models.CharField(help_text='В точности как в каталоге поставщика', max_length=100, verbose_name='Артикул')),
                ('power', models.FloatField(blank=True, default=0.0, help_text='Из каталога поставщика. В м3/ч', null=True, verbose_name='Мощность')),
                ('voltage', models.CharField(blank=True, choices=[('220v', '220v'), ('380v', '380v')], default='220v', help_text='220 Вольт / 380вольт', max_length=20, null=True, verbose_name='Вольтаж')),
                ('price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость')),
                ('date', models.DateField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Дата актуальности цены', null=True, verbose_name='Дата')),
                ('image', models.ImageField(help_text='Красивое фото используется для коммерческого предложения', upload_to='catalog/pumps/', verbose_name='Фото товара')),
                ('status', models.CharField(default='no_found', editable=False, max_length=50)),
                ('product_url', models.URLField(blank=True, help_text='Для актуализации цен в каталоге поставщика. ', null=True, verbose_name='Ссылка на товар у поставщика')),
                ('supplier', models.ForeignKey(help_text='Выбрать из поставщиков', on_delete=django.db.models.deletion.CASCADE, to='supplier.suppliermodel', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Насос',
                'verbose_name_plural': 'Насосное оборудование',
            },
        ),
        migrations.CreateModel(
            name='LightingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='В точности как в каталоге поставщика', max_length=500, verbose_name='Номенклатура')),
                ('article', models.CharField(blank=True, help_text='В точности как в каталоге поставщика', max_length=100, verbose_name='Артикул')),
                ('type_category', models.CharField(blank=True, choices=[('lamp', 'Лампа'), ('flask', 'Прожектор без лампы'), ('overlay', 'Лицевая панель'), ('automation', 'Автоматика управления')], help_text='Выбрать подходящее', max_length=20, null=True, verbose_name='Категория')),
                ('type_lighting', models.CharField(blank=True, choices=[('white', 'Белый свет'), ('rgb', 'RGB'), ('none', 'НЕТ (Для закладной и автоматики)')], help_text='Выбрать подходящее', max_length=20, null=True, verbose_name='Цвет свечения')),
                ('type_materials', models.CharField(blank=True, choices=[('abs', 'ABS пластик'), ('aisi', 'AISI-316 нержавеющий металл')], default='abs', help_text='Пластик или нерж', max_length=20, null=True, verbose_name='Материал изготовления')),
                ('price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за ед.')),
                ('date', models.DateField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Дата актуальности цены', null=True, verbose_name='Дата')),
                ('image', models.ImageField(help_text='Красивое фото используется для коммерческого предложения', upload_to='catalog/light/', verbose_name='Фото товара')),
                ('status', models.CharField(default='no_found', editable=False, max_length=50)),
                ('product_url', models.URLField(blank=True, help_text='Для актуализации цен в каталоге поставщика. ', null=True, verbose_name='Ссылка на товар у поставщика')),
                ('supplier', models.ForeignKey(help_text='Выбрать из поставщиков', on_delete=django.db.models.deletion.CASCADE, to='supplier.suppliermodel', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Подводное освещение',
                'verbose_name_plural': 'Подводное освещение',
            },
        ),
        migrations.CreateModel(
            name='HydrolysisModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='В точности как у поставщика', max_length=200, verbose_name='Название')),
                ('type_category', models.CharField(blank=True, choices=[('h2o', 'Гидролизная установка')], max_length=20, null=True, verbose_name='Категория')),
                ('price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за ед.')),
                ('date', models.DateField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Дата актуальности цены', null=True, verbose_name='Дата')),
                ('status', models.CharField(default='no_found', editable=False, max_length=50)),
                ('product_url', models.URLField(blank=True, help_text='Для актуализации цен в каталоге поставщика. ', null=True, verbose_name='Ссылка на товар у поставщика')),
                ('ph_liquid_name', models.CharField(help_text='В точности как у поставщика', max_length=200, verbose_name='Жидкий РН регулятор')),
                ('ph_liquid_article', models.CharField(blank=True, help_text='В точности как в каталоге поставщика', max_length=100, verbose_name='Артикул')),
                ('ph_liquid_price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за ед.')),
                ('ph_liquid_date', models.DateField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Дата актуальности цены', null=True, verbose_name='Дата')),
                ('ph_liquid_status', models.CharField(default='no_found', editable=False, max_length=50)),
                ('ph_liquid_product_url', models.URLField(blank=True, help_text='Для актуализации цен в каталоге поставщика. ', null=True, verbose_name='Ссылка на товар у поставщика')),
                ('image', models.ImageField(help_text='Красивое фото используется для коммерческого предложения', upload_to='catalog/disinfection/', verbose_name='Фото товара')),
                ('model_name', models.CharField(blank=True, editable=False, max_length=100)),
                ('supplier', models.ForeignKey(help_text='Выбрать из списка', on_delete=django.db.models.deletion.CASCADE, to='supplier.suppliermodel', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Гидролизная установка',
                'verbose_name_plural': 'Гидролизная установка',
            },
        ),
        migrations.CreateModel(
            name='HeatingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='В точности как в каталоге поставщика', max_length=500, verbose_name='Номенклатура')),
                ('article', models.CharField(blank=True, help_text='В точности как в каталоге поставщика', max_length=100, verbose_name='Артикул')),
                ('type_category', models.CharField(blank=True, choices=[('electro', 'Электронагреватель'), ('warm', 'Теплообменник'), ('pump', 'Тепловой насос')], help_text='Выбрать подходящее', max_length=20, null=True, verbose_name='Категория')),
                ('price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за ед.')),
                ('date', models.DateField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Дата актуальности цены', null=True, verbose_name='Дата')),
                ('image', models.ImageField(help_text='Красивое фото используется для коммерческого предложения', upload_to='catalog/heating/', verbose_name='Фото товара')),
                ('status', models.CharField(default='no_found', editable=False, max_length=50)),
                ('product_url', models.URLField(blank=True, help_text='Для актуализации цен в каталоге поставщика. ', null=True, verbose_name='Ссылка на товар у поставщика')),
                ('supplier', models.ForeignKey(help_text='Выбрать из поставщиков', on_delete=django.db.models.deletion.CASCADE, to='supplier.suppliermodel', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Подогрев воды',
                'verbose_name_plural': 'Подогрев воды',
            },
        ),
        migrations.CreateModel(
            name='FinishingMaterialsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='В точности как в каталоге поставщика', max_length=500, verbose_name='Номенклатура')),
                ('article', models.CharField(blank=True, help_text='В точности как в каталоге поставщика', max_length=100, verbose_name='Артикул')),
                ('type_materials', models.CharField(blank=True, choices=[('poly', 'Полипропилен'), ('pvh', 'Пленка ПВХ')], default='pvh', help_text='Пленка ПВХ / Полипропилен', max_length=20, null=True, verbose_name='Категория материала')),
                ('price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за м2')),
                ('date', models.DateField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Дата актуальности цены', null=True, verbose_name='Дата')),
                ('image', models.ImageField(help_text='Красивое фото используется для коммерческого предложения', upload_to='catalog/finished/', verbose_name='Фото товара')),
                ('status', models.CharField(default='no_found', editable=False, max_length=50)),
                ('product_url', models.URLField(blank=True, help_text='Для актуализации цен в каталоге поставщика. ', null=True, verbose_name='Ссылка на товар у поставщика')),
                ('supplier', models.ForeignKey(help_text='Выбрать из поставщиков', on_delete=django.db.models.deletion.CASCADE, to='supplier.suppliermodel', verbose_name='Поставщик')),
                ('works', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalogs.workmaterialmodel', verbose_name='Работы')),
            ],
            options={
                'verbose_name': 'Материал',
                'verbose_name_plural': 'Отделочные материалы',
            },
        ),
        migrations.CreateModel(
            name='FilterModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='В точности как в каталоге поставщика', max_length=500, verbose_name='Номенклатура')),
                ('article', models.CharField(help_text='В точности как в каталоге поставщика', max_length=100, verbose_name='Артикул')),
                ('square', models.IntegerField(blank=True, default=0.0, help_text='Из каталога поставщика. В мм', null=True, verbose_name='Диаметр')),
                ('filter', models.FloatField(blank=True, default=0.0, help_text='Из каталога поставщика. в м2', null=True, verbose_name='Площадь фильтрации')),
                ('sand', models.IntegerField(blank=True, default=0.0, help_text='Из каталога поставщика. В кг', null=True, verbose_name='количество фильтрата')),
                ('price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость')),
                ('date', models.DateField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Дата актуальности цены', null=True, verbose_name='Дата')),
                ('image', models.ImageField(help_text='Красивое фото используется для коммерческого предложения', upload_to='catalog/filters/', verbose_name='Фото товара')),
                ('status', models.CharField(default='no_found', editable=False, max_length=50)),
                ('product_url', models.URLField(blank=True, help_text='Для актуализации цен в каталоге поставщика. ', null=True, verbose_name='Ссылка на товар у поставщика')),
                ('supplier', models.ForeignKey(help_text='Выбрать из поставщиков', on_delete=django.db.models.deletion.CASCADE, to='supplier.suppliermodel', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Фильтр',
                'verbose_name_plural': 'Фильтровальное оборудование',
            },
        ),
        migrations.CreateModel(
            name='EntranceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Если позиция покупная то используется номенклатура. Иначе заполнить по внетреннему названию', max_length=500, verbose_name='Номенклатура')),
                ('article', models.CharField(blank=True, help_text='В точности как в каталоге поставщика', max_length=100, verbose_name='Артикул')),
                ('type_category', models.CharField(choices=[('steps', 'Ступени'), ('ladder', 'Лестница')], default='steps', max_length=20, verbose_name='Категория')),
                ('price', models.FloatField(blank=True, default=0, null=True, verbose_name='Розничная стоимость за ед.')),
                ('date', models.DateField(blank=True, default=django.utils.timezone.now, editable=False, help_text='Дата актуальности цены', null=True, verbose_name='Дата')),
                ('status', models.CharField(default='no_found', editable=False, max_length=50)),
                ('product_url', models.URLField(blank=True, help_text='Для актуализации цен в каталоге поставщика. ', null=True, verbose_name='Ссылка на товар у поставщика')),
                ('supplier', models.ForeignKey(blank=True, default=0, help_text='Выбрать из поставщиков', on_delete=django.db.models.deletion.CASCADE, to='supplier.suppliermodel', verbose_name='Поставщик')),
            ],
            options={
                'verbose_name': 'Номенклатуру',
                'verbose_name_plural': 'Входная группа',
            },
        ),
    ]
